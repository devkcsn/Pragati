<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>View Quizzes</title>
    <link rel="icon" href="/assets/images/pragati_icon.png" type="image/x-icon">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <style>
        :root {
            --primary-color: #4361ee;
            --primary-hover: #3a56d4;
            --secondary-color: #6c757d;
            --success-color: #2ecc71;
            --success-hover: #27ae60;
            --danger-color: #e74c3c;
            --danger-hover: #c0392b;
            --light-bg: #f8f9fa;
            --border-color: #dfe4ea;
            --text-color: #2d3436;
            --text-secondary: #636e72;
            --box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);
        }
        
        body {
            font-family: 'Poppins', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f3f4f6;
            color: var(--text-color);
        }
        
        .navbar {
            background-color: #333;
            color: white;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .navbar h1 {
            margin: 0;
            font-weight: 600;
            font-size: 1.5em;
        }
        
        .navbar .nav-links {
            display: flex;
            align-items: center;
            gap: 20px;
        }
        
        .navbar .nav-links a {
            color: white;
            text-decoration: none;
            display: flex;
            align-items: center;
            gap: 6px;
            transition: color 0.3s ease;
        }
        
        .navbar .nav-links a:hover {
            color: #ccc;
        }

        .container {
            max-width: 1000px;
            margin: 30px auto;
            padding: 0 20px;
        }

        .quizzes-container {
            background-color: white;
            border-radius: 12px;
            box-shadow: var(--box-shadow);
            overflow: hidden;
        }

        .header {
            background-color: var(--primary-color);
            color: white;
            padding: 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .header h2 {
            margin: 0;
            font-weight: 600;
        }

        .create-button {
            background-color: white;
            color: var(--primary-color);
            border: none;
            border-radius: 8px;
            padding: 10px 16px;
            font-family: inherit;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .create-button:hover {
            background-color: #f1f1f1;
            transform: translateY(-2px);
        }

        .quiz-list {
            list-style-type: none;
            padding: 0;
            margin: 0;
        }

        .quiz-item {
            padding: 15px 20px;
            border-bottom: 1px solid var(--border-color);
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: background-color 0.3s ease;
        }

        .quiz-item:last-child {
            border-bottom: none;
        }

        .quiz-item:hover {
            background-color: var(--light-bg);
        }

        .quiz-info {
            flex: 1;
        }

        .quiz-title {
            font-weight: 500;
            font-size: 1.1em;
            margin-bottom: 5px;
            color: var(--primary-color);
        }

        .quiz-date {
            font-size: 0.85em;
            color: var(--text-secondary);
        }

        .quiz-actions {
            display: flex;
            gap: 10px;
        }

        .action-btn {
            background-color: transparent;
            border: none;
            color: var(--secondary-color);
            cursor: pointer;
            font-size: 1em;
            width: 36px;
            height: 36px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
        }

        .action-btn:hover {
            background-color: rgba(0, 0, 0, 0.05);
        }

        .view-btn {
            color: var(--primary-color);
        }

        .edit-btn {
            color: var(--secondary-color);
        }

        .delete-btn {
            color: var(--danger-color);
        }

        .loading-container {
            text-align: center;
            padding: 40px;
        }

        .loading-spinner {
            color: var(--primary-color);
            font-size: 2em;
            animation: spin 1s infinite linear;
        }

        .error-container {
            text-align: center;
            padding: 40px;
        }

        .error-container i {
            font-size: 3em;
            color: var(--danger-color);
            margin-bottom: 15px;
        }

        .no-quizzes {
            text-align: center;
            padding: 40px;
            color: var(--text-secondary);
        }

        .no-quizzes i {
            font-size: 3em;
            margin-bottom: 15px;
            color: var(--secondary-color);
        }

        .filter-bar {
            background-color: var(--light-bg);
            padding: 15px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            border-bottom: 1px solid var(--border-color);
        }

        .search-box {
            display: flex;
            align-items: center;
            background-color: white;
            border-radius: 8px;
            padding: 0 15px;
            border: 1px solid var(--border-color);
            width: 300px;
        }

        .search-box input {
            border: none;
            padding: 10px;
            font-family: inherit;
            width: 100%;
            outline: none;
        }

        .search-box i {
            color: var(--text-secondary);
        }

        .filter-dropdown {
            padding: 10px;
            border-radius: 8px;
            border: 1px solid var(--border-color);
            font-family: inherit;
            background-color: white;
            cursor: pointer;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 768px) {
            .filter-bar {
                flex-direction: column;
                gap: 10px;
            }
            
            .search-box {
                width: 100%;
            }
            
            .quiz-item {
                flex-direction: column;
                align-items: flex-start;
            }
            
            .quiz-actions {
                margin-top: 15px;
                align-self: flex-end;
            }
        }
    </style>
</head>
<body>
    <div class="navbar">
        <h1>View Quizzes</h1>
        <div class="nav-links">
            <div class="username">Welcome, <%= user.firstName %> <%= user.lastName %></div>
            <a href="/coordinatorDashboard"><i class="fas fa-tachometer-alt"></i> Dashboard</a>
            <a href="/logout"><i class="fas fa-sign-out-alt"></i> Logout</a>
        </div>
    </div>

    <div class="container">
        <div id="quizzes-container" class="loading-container">
            <i class="fas fa-spinner loading-spinner"></i>
            <p>Loading quizzes...</p>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Fetch all quizzes
            fetchQuizzes();
        });

        async function fetchQuizzes() {
            try {
                console.log('Fetching all quizzes');
                const response = await fetch('/api/quizzes');
                
                console.log('Response status:', response.status);
                
                if (!response.ok) {
                    let errorText = 'Failed to fetch quizzes';
                    try {
                        const errorData = await response.json();
                        errorText = errorData.message || errorText;
                    } catch (e) {
                        // If response is not JSON
                    }
                    throw new Error(errorText);
                }
                
                const quizzes = await response.json();
                console.log('Quizzes received:', quizzes);
                displayQuizzes(quizzes);
            } catch (error) {
                console.error('Error:', error);
                showErrorMessage(error.message);
            }
        }

        function displayQuizzes(quizzes) {
            const container = document.getElementById('quizzes-container');
            
            if (!quizzes || quizzes.length === 0) {
                container.innerHTML = `
                    <div class="quizzes-container">
                        <div class="header">
                            <h2>All Quizzes</h2>
                            <button class="create-button" onclick="window.location.href='/createQuiz'">
                                <i class="fas fa-plus"></i> Create Quiz
                            </button>
                        </div>
                        <div class="no-quizzes">
                            <i class="fas fa-clipboard-question"></i>
                            <h3>No Quizzes Found</h3>
                            <p>You haven't created any quizzes yet. Click the button above to create your first quiz!</p>
                        </div>
                    </div>
                `;
                return;
            }
            
            // Sort quizzes by creation date (newest first)
            quizzes.sort((a, b) => {
                const dateA = new Date(a.created_date || a.createdDate);
                const dateB = new Date(b.created_date || b.createdDate);
                return dateB - dateA;
            });
            
            let html = `
                <div class="quizzes-container">
                    <div class="header">
                        <h2>All Quizzes (${quizzes.length})</h2>
                        <button class="create-button" onclick="window.location.href='/createQuiz'">
                            <i class="fas fa-plus"></i> Create Quiz
                        </button>
                    </div>
                    
                    <div class="filter-bar">
                        <div class="search-box">
                            <i class="fas fa-search"></i>
                            <input type="text" id="searchInput" placeholder="Search quizzes..." onkeyup="filterQuizzes()">
                        </div>
                        <select class="filter-dropdown" id="sortFilter" onchange="filterQuizzes()">
                            <option value="newest">Newest First</option>
                            <option value="oldest">Oldest First</option>
                            <option value="alphabetical">A-Z</option>
                        </select>
                    </div>
                    
                    <ul class="quiz-list" id="quizList">
            `;
            
            quizzes.forEach(quiz => {
                // Format date
                const createdDate = new Date(quiz.created_date || quiz.createdDate).toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'short',
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                });
                
                html += `
                    <li class="quiz-item" data-title="${quiz.title.toLowerCase()}">
                        <div class="quiz-info">
                            <div class="quiz-title">${quiz.title}</div>
                            <div class="quiz-date">Created on ${createdDate}</div>
                        </div>
                        <div class="quiz-actions">
                            <button class="action-btn view-btn" onclick="viewQuiz('${quiz.id}')" title="View Quiz">
                                <i class="fas fa-eye"></i>
                            </button>
                            <button class="action-btn edit-btn" onclick="editQuiz('${quiz.id}')" title="Edit Quiz">
                                <i class="fas fa-edit"></i>
                            </button>
                            <button class="action-btn delete-btn" onclick="confirmDeleteQuiz('${quiz.id}')" title="Delete Quiz">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </div>
                    </li>
                `;
            });
            
            html += `
                    </ul>
                </div>
            `;
            
            container.innerHTML = html;
        }

        function filterQuizzes() {
            const searchInput = document.getElementById('searchInput').value.toLowerCase();
            const sortOption = document.getElementById('sortFilter').value;
            const quizItems = document.querySelectorAll('.quiz-item');
            
            // Create array for sorting
            const quizArray = Array.from(quizItems);
            
            // Sort based on selected option
            if (sortOption === 'newest') {
                // Already sorted by newest in display function
            } else if (sortOption === 'oldest') {
                quizArray.reverse();
            } else if (sortOption === 'alphabetical') {
                quizArray.sort((a, b) => {
                    const titleA = a.querySelector('.quiz-title').textContent.toLowerCase();
                    const titleB = b.querySelector('.quiz-title').textContent.toLowerCase();
                    return titleA.localeCompare(titleB);
                });
            }
            
            // First hide all
            quizItems.forEach(item => {
                item.style.display = 'none';
            });
            
            // Then show filtered and sorted items
            quizArray.forEach(item => {
                const quizTitle = item.dataset.title;
                if (quizTitle.includes(searchInput)) {
                    item.style.display = 'flex';
                }
            });
            
            // Reappend to parent in new order
            const quizList = document.getElementById('quizList');
            quizArray.forEach(item => {
                quizList.appendChild(item);
            });
        }

        function viewQuiz(quizId) {
            window.location.href = `/viewQuiz/${quizId}`;
        }

        function editQuiz(quizId) {
            window.location.href = `/editQuiz/${quizId}`;
        }

        function confirmDeleteQuiz(quizId) {
            if (confirm('Are you sure you want to delete this quiz? This action cannot be undone.')) {
                deleteQuiz(quizId);
            }
        }

        async function deleteQuiz(quizId) {
            try {
                const response = await fetch(`/api/quizzes/${quizId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) {
                    throw new Error('Failed to delete quiz');
                }

                alert('Quiz deleted successfully!');
                fetchQuizzes(); // Refresh the quiz list
            } catch (error) {
                console.error('Error:', error);
                alert('Failed to delete quiz. Please try again.');
            }
        }

        function showErrorMessage(errorMsg = null) {
            const container = document.getElementById('quizzes-container');
            container.innerHTML = `
                <div class="error-container">
                    <i class="fas fa-exclamation-triangle"></i>
                    <h3>Error Loading Quizzes</h3>
                    <p>${errorMsg || 'There was an error loading the quizzes. Please try again later.'}</p>
                    <button class="btn btn-primary" onclick="fetchQuizzes()">
                        <i class="fas fa-sync-alt"></i> Try Again
                    </button>
                </div>
            `;
        }
    </script>
</body>
</html>